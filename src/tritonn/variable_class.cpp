//=================================================================================================
//===
//=== variable_class.cpp
//===
//=== Copyright (c) 2019 by RangeSoft.
//=== All rights reserved.
//===
//=== Litvinov "VeduN" Vitaliy O.
//===
//=================================================================================================
//===
//=== Класс доступа к объектам и переменным из внешних источников. Массив данных структур
//=== заполняется на старте приложения и остается не изменным.
//===
//=================================================================================================

#include "variable_class.h"


rVariableClass::rVariableClass()
{
}


//-------------------------------------------------------------------------------------------------
// Конструктор удаляет все дерево переменных, включая дочерние и соседние узлы
rVariableClass::~rVariableClass()
{
}



UDINT rVariableClass::processing()
{
	return TRITONN_RESULT_OK;
}


const rVariable* rVariableClass::findVar(const std::string& name)
{
	return m_varList.find(name);
}
